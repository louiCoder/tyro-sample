# # Javascript Node CircleCI 2.0 configuration file
# #
# # Check https://circleci.com/docs/2.0/language-javascript/ for more details
# #
# version: 2
# jobs:
#   build:
#     environment:
#       CC_TEST_REPORTER_ID: de1d7df90835a4688e72044ffda2c71f770245c7f30fd8273ea929cf9fc2e4f9
#     docker:
#       # specify the version you desire here
#       - image: circleci/node:8

#       # Specify service dependencies here if necessary
#       # CircleCI maintains a library of pre-built images
#       # documented at https://circleci.com/docs/2.0/circleci-images/
#       # - image: circleci/mongo:3.4.4

#     working_directory: ~/repo/tmp

#     steps:
#       - checkout

#       # Download and cache dependencies
#       - restore_cache:
#           keys:
#             - v1-dependencies-{{ checksum "package.json" }}
#             # fallback to using the latest cache if no exact match is found
#             - v1-dependencies-

#       - run: npm install
#       - attach_workspace:
#           at: ~/repo/tmp

#       - save_cache:
#           paths:
#             - node_modules
#           key: v1-dependencies-{{ checksum "package.json" }}

#       - run: npm install
#       - run: 
#           name: Run frontend testss
#           command: |
#             npm test
#             ./tmp/cc-test-reporter format-coverage -t lcov -o tmp/codeclimate.json coverage/lcov.info
#       - persist_to_workspace:
#           root: tmp
#           paths: 
#             - codeclimate.json
#   upload-coverage:
#       environment: 
#         - CC_TEST_REPORTER_ID: de1d7df90835a4688e72044ffda2c71f770245c7f30fd8273ea929cf9fc2e4f9
#       steps:
#         - attach_workspace:
#             at: ~/repo/tmp
#         - run:
#             name: Upload coverage results to Code Climate
#             command: |
#               ./tmp/cc-test-reporter sum-coverage tmp/codeclimate.json -p 2 -o tmp/codeclimate.total.json

#------------------separator ---------------------------#

version: 2
jobs:
  build:
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - run: npm install
      - run:
          name: "Run Jest and Collect Coverage Reports"
          command: jest --collectCoverage=true
      - store_artifacts:
          path: coverage
